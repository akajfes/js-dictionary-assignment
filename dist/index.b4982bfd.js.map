{"mappings":"AAgBA,SAASA,EAAeC,GACtB,IAAIC,EAAUC,SAASC,cAAc,0BAGjCC,EAAKF,SAASG,cAAc,MAChCD,EAAGE,UAAUC,IACX,kBACA,SACA,0BACA,qBAGF,IAAIC,EAAWN,SAASG,cAAc,OACtCG,EAASF,UAAUC,IAAI,OAAQ,UAAW,cAE1C,IAAIE,EAAWP,SAASG,cAAc,OACtCI,EAASH,UAAUC,IAAI,WACvB,IAAIG,EAAOV,EAASU,KACpBD,EAASE,YAAcD,EAEvB,IAAIE,EAAIV,SAASG,cAAc,KAC3BQ,EAAab,EAASc,SAAS,GAAGC,YAAY,GAAGF,WACrDD,EAAED,YAAcE,EAGhB,IAAIG,EAAYd,SAASG,cAAc,UAUvC,OATAW,EAAUV,UAAUC,IAAI,MAAO,cAAe,kBAC9CS,EAAUL,YAAc,oBAExBP,EAAGa,OAAOT,GACVA,EAASS,OAAOR,GAChBD,EAASS,OAAOL,GAChBR,EAAGa,OAAOD,GAEVf,EAAQgB,OAAOb,GACRA,CACT,CChDuBF,SAASC,cAAc,sBAE7Be,iBAAiB,UAAWC,IAC3CA,EAAMC,iBAEN,IAAIC,EAAuBF,EAAMG,OAAOC,SAAS,KCRnD,IAAiBb,KDUPW,EAAqBG,MCTtBC,MAAM,mDAAmDf,MDU7DgB,MAAMC,GAAQA,EAAIC,SAClBF,MAAMhB,GAASX,EAAeW,EAAK,KAAE,IAQtBR,SAASC,cAAc,0BAE7Be,iBAAiB,SAAUC,IACvC,IAAIG,EAASH,EAAMG,OACfO,EAASP,EAAOQ,WAEpB,GAAIR,EAAOhB,UAAUyB,SAAS,kBAAmB,CAC/C,IAAIC,EAAa9B,SAASC,cAAc,oBACpCa,EAAYd,SAASC,cAAc,mBAEvC6B,EAAWf,OAAOY,GAClBA,EAAOI,YAAYjB,EACrB","sources":["js/dom/word-item.js","js/main.js","js/api/dictionary.js"],"sourcesContent":["/*\r\nHTML Structure \r\n\r\n<li class=\"list-group-item d-flex justify-content-between align-items-start\">\r\n    <div class=\"ms-2 me-auto definition\">\r\n        <div class=\"fw-bold\">WORD HERE</div>\r\n        <p>PARAGRAPH HERE</p>\r\n    </div>\r\n    <button class=\"m-2 btn btn-primary favourite-word\">Add To Favourites</button>\r\n</li>\r\n\r\n\r\nNote: I'm sure you've read the PDF but there will be no marks given\r\nfor using innerHTML or innerText. \r\n*/\r\n\r\nfunction createWordItem(wordData) {\r\n  let recents = document.querySelector(\".recently-search-words\");\r\n\r\n  //setting up li\r\n  let li = document.createElement(\"li\");\r\n  li.classList.add(\r\n    \"list-group-item\",\r\n    \"d-flex\",\r\n    \"justify-content-between\",\r\n    \"align-items-start\"\r\n  );\r\n  //first div\r\n  let outerDiv = document.createElement(\"div\");\r\n  outerDiv.classList.add(\"ms-2\", \"me-auto\", \"definition\");\r\n  //second div\r\n  let innerDiv = document.createElement(\"div\");\r\n  innerDiv.classList.add(\"fw-bold\");\r\n  let word = wordData.word;\r\n  innerDiv.textContent = word;\r\n  //Get first “definition” in the first “meaning” from the wordData object.\r\n  let p = document.createElement(\"p\");\r\n  let definition = wordData.meanings[0].definitions[0].definition;\r\n  p.textContent = definition;\r\n\r\n  //button\r\n  let favButton = document.createElement(\"button\");\r\n  favButton.classList.add(\"btn\", \"btn-primary\", \"favourite-word\");\r\n  favButton.textContent = \"Add To Favourites\";\r\n\r\n  li.append(outerDiv);\r\n  outerDiv.append(innerDiv);\r\n  outerDiv.append(p);\r\n  li.append(favButton);\r\n\r\n  recents.append(li);\r\n  return li;\r\n}\r\n\r\nexport { createWordItem };\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { getWord } from \"./api/dictionary.js\";\r\nimport { createWordItem } from \"./dom/word-item.js\";\r\n\r\nlet dictionarySearch = document.querySelector(\"#dictionary-search\");\r\n\r\ndictionarySearch.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n\r\n  let dictionarySearchForm = event.target.elements[\"word\"];\r\n\r\n  getWord(dictionarySearchForm.value)\r\n    .then((res) => res.json())\r\n    .then((word) => createWordItem(word[0]));\r\n});\r\n\r\n//In the main.js file, create an event listener on the “searched words” list that will listen to clicks,\r\n//check if it’s the button on the word item (the best way to do this is check if the element contains\r\n//a certain class). If it is, then it will add that element to the “Favourite Words” list and\r\n//also remove the button itself.\r\n\r\nlet searchedWords = document.querySelector(\".recently-search-words\");\r\n\r\nsearchedWords.addEventListener(\"click\", (event) => {\r\n  let target = event.target;\r\n  let parent = target.parentNode;\r\n\r\n  if (target.classList.contains(\"favourite-word\")) {\r\n    let favourites = document.querySelector(\".favourite-words\");\r\n    let favButton = document.querySelector(\".favourite-word\");\r\n\r\n    favourites.append(parent);\r\n    parent.removeChild(favButton);\r\n  }\r\n});\r\n","// fetch from the dictionary api here!\r\nfunction getWord(word) {\r\n  return fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\r\n}\r\n\r\nexport { getWord };\r\n"],"names":["$0ab01dbbeb7f07bf$export$98491136bd4113db","wordData","recents","document","querySelector","li","createElement","classList","add","outerDiv","innerDiv","word","textContent","p","definition","meanings","definitions","favButton","append","addEventListener","event","preventDefault","dictionarySearchForm","target","elements","value","fetch","then","res","json","parent","parentNode","contains","favourites","removeChild"],"version":3,"file":"index.b4982bfd.js.map"}